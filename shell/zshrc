# ZSH

# History
HISTFILE=~/.histfile
HISTSIZE=5000
SAVEHIST=5000

# Avoid % in prompt
set +o prompt_cr +o prompt_sp

# Shell
eval "$(sheldon -q --non-interactive source)"
eval "$(starship init zsh)"

# Options
setopt autocd extendedglob
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt inc_append_history
setopt share_history
setopt correct
setopt auto_menu

# Bindkeys
bindkey -e

# Completions
zstyle :compinstall filename '/home/david/.zshrc'
zstyle ':completion:*' menu select
autoload -Uz compinit
compinit

# Uv Completion
eval "$(uv generate-shell-completion zsh)"

# Aliases
alias cd='z'
alias ls='eza --color=auto --icons=always'
alias ll='eza -l --icons'
alias la='eza -la --icons'
alias tree='eza --tree --icons'
alias cat='bat -p'
alias up='paru -Syu --devel --skipreview'
alias tn='tod task create -p Personal -u Today -l "" --priority 1 -c'
alias tnw='tod task create -p Work -u Today -l "" --priority 1 -c'
alias tls='tod list view -f "Today"'
alias chat='llm chat'
alias cmd='llm -t cmd'
alias dirty='for dir in */; do (cd "$dir"; if git status --porcelain | grep . > /dev/null; then echo "$dir"; fi) done'
alias pull='for dir in */; do (cd "$dir"; if git remote update && git status -uno | grep -q "Your branch is behind"; then echo "$dir needs pulling"; git pull; fi) done'

# Functions
aigcm() {
  git add -A .
  git diff --minimal --cached | \
    llm -t gitcommit > $(git rev-parse --git-dir)/COMMIT_EDITMSG && \
    git commit --verbose --edit --file=$(git rev-parse --git-dir)/COMMIT_EDITMSG
}

subdl() {
  uvx subliminal download -l es -s "$1"
}

# FZF
source <(fzf --zsh)

# Zoxide
eval "$(zoxide init zsh)"

# Expand PATH with $HOME/.local/bin
export PATH=$HOME/.local/bin:$HOME/projects/dotfiles/scripts:$PATH

# SSH Agent
if [ -z "$SSH_AUTH_SOCK" ]; then
  # Check for a currently running instance of the agent
  RUNNING_AGENT="`ps -ax | grep 'ssh-agent -s' | grep -v grep | wc -l | tr -d '[:space:]'`"
  if [ "$RUNNING_AGENT" = "0" ]; then
    # Launch a new instance of the agent
    ssh-agent -s &> $HOME/.ssh/ssh-agent
  fi
  eval `cat $HOME/.ssh/ssh-agent` > /dev/null

  # Add all keys
  ssh-add
fi

# Move cursor
bindkey "^[[1;5C" forward-word
bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word
bindkey "^[[1;5D" backward-word

# Supr delete
bindkey "^[[3~" delete-char

# History substring search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND='bg=blue,fg=black,bold'

# Hyprland
if [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then
  exec Hyprland
fi
